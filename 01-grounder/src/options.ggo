package "pandaPIgrounder"
version "0.1"
purpose "The grounder of the pandaPI planning system. Takes a simplified lifted HTN as its input and outputs a grounded version of the input."
usage "./pandaPIgrounder [OPTIONS] input.htn output.sas"
#description "<description>"
#versiontext "<versiontext>"

args "--string-parser -u"


## use "-" for an option without a short option

section "General Options"

option "debug" d "activate debug mode" flag off
option "quiet" q "activate quiet mode. Grounder will make no output." flag off
option "print-timings" T "print detailed timings of individual operations." flag off
option "output-domain" O "write internal data structures representing the lifted input to standard out (only for debugging)." flag off
option "plan" P "specify a plan. One the methods pertaining to this plan will be grounded. Provide a file(name) in which the plan is." string


section "Additional Inferences"
option "invariants" i "use CPDL to infer lifted FAM groups and ground them." flag off
option "h2" 2 "use H2 preprocessor to infer invariants." flag off

section "Transformations"
option "dont-remove-duplicates" D "don't remove duplcate actions, i.e. actions with the same preconditions and effects will be replaced by the same action. Currently, this applies only to method precondition actions." flag on
option "no-empty-compilation" E "by default the grounder adds a zero-cost no-op action to otherwise empty methods. Needed by the pandaPIengine progression planner. This option disables the compilation" flag on
option "no-literal-pruning" l "disables removal of statically true or false literals. Also literals that don't occur in preconditions are removed." flag on
option "no-abstract-expansion" e "disables application of methods in the model. If an abstract task has only one applicable method, it will be applied directly in them model." flag on
option "no-method-precondition-pruning" m "disables removal of actions without precondition and effects that where artificially inserted by the parser." flag on
option "two-regularisation" t "transforms the model s.t. every method has at most two subtasks. Might be impossible for some partially ordered instances." flag off
option "keep-two-regularisation" k "keep two regularisation if it is already present in the input domain" flag off
option "compactify-actions" C "combine consecutive primitive actions in methods into one." flag off

section "Grounding options" sectiondesc="These options only affect the performance of the grounder. Usually the defaults are fine. Please only change them if the grounder fails to ground the instance in a reasonable amount of time"
option "static-precondition-checking-in-hierarchy-typing" c "check static preconditions already during hierarchy typing. This will increase the size of the hierarchy typing, but will make it more informed" flag off
option "future-caching-by-initially-matched-precondition" f "enables future caching for the initially matched precondition in the generalised planning graph" flag off
option "no-hierarchy-typing" n "disables hierarchy typing" flag on


section "Output Mode" 
defgroup "outputmode"
text "Default output mode is planner mode" # new line
groupoption "planner" - "normal output for pandaPIplanner." group="outputmode"
groupoption "sasplus" s "output SAS+ in Fast Downwards format. Note that this will only output the classical part of the model." group="outputmode"
groupoption "hddl" H "output HDDL." group="outputmode"
groupoption "no-output" g "only ground the instance, don't output anything." group="outputmode"

defgroup "sasmode"
text "Default SAS+ mode is as-input-sas-deletes" 
groupoption "as-input-sas-deletes" - "write the delete effects in the input (usually the minimally needed delete effects)" group="sasmode"
groupoption "no-sas-deletes" N "don't output delete effects for SAS+ variables." group="sasmode"
groupoption "all-sas-deletes" A "output all inferrable delete effects for each SAS+ variables." group="sasmode"

text "\nFurther options" # new line
option "force-sas" S "output all facts as SAS+ variables. Normally we use a special format for binary SAS+variables." flag off
option "compile-negative" G "compile away negative SAS+ preconditions" flag off
