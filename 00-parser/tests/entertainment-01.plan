SAT solver                                   = 10
SAT solver for K=0003                        = 0
SAT solver for K=0004                        = 10

#1 "40 sat:90:solved"="true";"30 problem:05:number of primitive actions"="35";"30 problem:01:number of constants"="0";"30 problem:04:number of abstract actions"="20";"02 properties:04:tail recursive"="true";"00 global:80:peak memory"="115660664";"40 sat:20:state formula"="7739";"40 sat:01:number of variables"="4899";"40 sat:14:K offset"="0";"40 sat:30:number of paths"="12";"40 sat:00:plan length"="-1";"40 sat:50:number of ordering clauses"="5571";"02 properties:02:mostly acyclic"="true";"30 problem:06:number of methods"="46";"30 problem:07:number of primitive shop actions"="26";"02 properties:05:totally ordered"="true";"02 properties:06:last task in all methods"="true";"30 problem:03:number of actions"="55";"30 problem:08:number of primitive non-shop actions"="9";"30 problem:02:number of predicates"="20";"40 sat:03:number of horn"="7762";"40 sat:15:K chosen value"="4";"30 problem:10:average method size"="1";"02 properties:03:regular"="false";"30 problem:09:size of largest method"="5";"40 sat:03:average size of clauses"="2.656909462219197";"40 sat:02:number of clauses"="8814";"40 sat:50:number of state clauses"="2168";"40 sat:03:number of assert"="11";"40 sat:22:method children clauses"="0";"00 global:90:planner result"="SOLUTION";"02 properties:01:acyclic"="true";"40 sat:50:number of decomposition clauses"="1075";"00 global:02:randomseed"="42";"40 sat:91:timeout"="false";"01 parsing:01:file parser"="752";"01 parsing:08:flatten formula"="394";"40 sat:41:SAT solver for K=0004"="10";"40 sat:00:total"="457";"40 sat:16:generate state formula"="336";"40 sat:20:transform to DIMACS"="34";"40 sat:11:generate path decomposition tree"="136";"02 preprocessing:07:compile methods with identical tasks"="4";"01 parsing:07:strip domain of hybridity"="3";"02 preprocessing:08:removing unnecessary predicates"="113";"01 parsing:03:closed world assumption"="125";"02 preprocessing:11:lifted reachabiltiy analysis"="75";"01 parsing:02:sort expansion"="355";"40 sat:12:normalise path decomposition tree"="24";"40 sat:40:SAT solver"="10";"01 parsing:00:total"="1777";"40 sat:10:generate formula"="340";"01 parsing:04:inherit preconditions"="0";"02 preprocessing:01:compile negative preconditions"="51";"00 total:00:total"="4686";"40 sat:13:sog optimisation"="37";"02 preprocessing:12:grounded planning graph analysis"="563";"02 preprocessing:02:compile unit methods"="0";"02 preprocessing:23:grounded task decomposition graph analysis"="544";"02 preprocessing:04:split parameter"="36";"01 parsing:05:shop methods"="42";"01 parsing:06:eliminate identical variables"="105";"40 sat:15:translate path decomposition tree to clauses"="132";"02 preprocessing:05:expand choiceless abstract tasks"="206";"40 sat:41:SAT solver for K=0003"="0";"02 preprocessing:00:total"="1738";"02 preprocessing:99:create artificial top task"="4";"02 preprocessing:84:grounding"="119"
==>
0 plug dvd-1 dvd-1-scart-1 scart-to-cinch-1 scart-to-cinch-1-scart-1
1 plug scart-to-cinch-1 scart-to-cinch-1-cinch-3 cinch-cable-2 cinch-cable-2-cinch-1
2 plug cinch-cable-2 cinch-cable-2-cinch-2 simple-tv-1 simple-tv-1-cinch-1
3 plug scart-to-cinch-1 scart-to-cinch-1-cinch-2 cinch-cable-1 cinch-cable-1-cinch-1
4 plug cinch-cable-1 cinch-cable-1-cinch-2 simple-tv-1 simple-tv-1-cinch-2
root 6
5 av_connect dvd-1 simple-tv-1 -> m-connect-split-1 8 12
6 __choicelessATCompilation__top_1 -> __top_1 5
7 direct_a_connect dvd-1 scart-to-cinch-1 -> m-dconnect-a-empty 
8 v_connect dvd-1 simple-tv-1 -> <<m-connect-rec-v;v_connect[dvd-1,cinch-cable-2];m-connect-rec-v;0;-1,-2,1>;v_connect[dvd-1,scart-to-cinch-1];m-connect-direct-v;0;-1,1,2> 14 10 13
9 direct_a_connect scart-to-cinch-1 cinch-cable-1 -> <<<m-dconnect-a;plug[scart-to-cinch-1,scart-to-cinch-1-cinch-2,cinch-cable-1,cinch-cable-1-cinch-1];_M-plug__CONSEQUENT__;0;-1>;plug__CONSEQUENT__[scart-to-cinch-1,scart-to-cinch-1-cinch-2,cinch-cable-1,cinch-cable-1-cinch-1];_M-plug__CONSEQUENT____ANTECEDENT;0;-1>;plug__CONSEQUENT____ANTECEDENT[scart-to-cinch-1,scart-to-cinch-1-cinch-2,cinch-cable-1,cinch-cable-1-cinch-1];_M-plug__CONSEQUENT____ANTECEDENT__DISJUNCT-0;0;-1> 3
10 direct_v_connect scart-to-cinch-1 cinch-cable-2 -> <<<m-dconnect-v;plug[scart-to-cinch-1,scart-to-cinch-1-cinch-3,cinch-cable-2,cinch-cable-2-cinch-1];_M-plug__ANTECEDENT;0;-1>;plug__ANTECEDENT[scart-to-cinch-1,scart-to-cinch-1-cinch-3,cinch-cable-2,cinch-cable-2-cinch-1];_M-plug__ANTECEDENT__DISJUNCT-0;0;-1>;plug__ANTECEDENT__DISJUNCT-0[scart-to-cinch-1,scart-to-cinch-1-cinch-3,cinch-cable-2,cinch-cable-2-cinch-1];_M-plug__ANTECEDENT__DISJUNCT-0__CONSEQUENT__;0;-1> 1
11 direct_a_connect cinch-cable-1 simple-tv-1 -> <<<m-dconnect-a;plug[cinch-cable-1,cinch-cable-1-cinch-2,simple-tv-1,simple-tv-1-cinch-2];_M-plug__CONSEQUENT__;0;-1>;plug__CONSEQUENT__[cinch-cable-1,cinch-cable-1-cinch-2,simple-tv-1,simple-tv-1-cinch-2];_M-plug__CONSEQUENT____ANTECEDENT;0;-1>;plug__CONSEQUENT____ANTECEDENT[cinch-cable-1,cinch-cable-1-cinch-2,simple-tv-1,simple-tv-1-cinch-2];_M-plug__CONSEQUENT____ANTECEDENT__DISJUNCT-1;0;-1> 4
12 a_connect dvd-1 simple-tv-1 -> <<m-connect-rec-a;a_connect[dvd-1,cinch-cable-1];m-connect-rec-a;0;-1,-2,1>;a_connect[dvd-1,scart-to-cinch-1];m-connect-direct-a;0;-1,1,2> 7 9 11
13 direct_v_connect cinch-cable-2 simple-tv-1 -> <<<m-dconnect-v;plug[cinch-cable-2,cinch-cable-2-cinch-2,simple-tv-1,simple-tv-1-cinch-1];_M-plug__ANTECEDENT;0;-1>;plug__ANTECEDENT[cinch-cable-2,cinch-cable-2-cinch-2,simple-tv-1,simple-tv-1-cinch-1];_M-plug__ANTECEDENT__DISJUNCT-1;0;-1>;plug__ANTECEDENT__DISJUNCT-1[cinch-cable-2,cinch-cable-2-cinch-2,simple-tv-1,simple-tv-1-cinch-1];_M-plug__ANTECEDENT__DISJUNCT-1__CONSEQUENT__;0;-1> 2
14 direct_v_connect dvd-1 scart-to-cinch-1 -> <<m-dconnect-v;plug[dvd-1,dvd-1-scart-1,scart-to-cinch-1,scart-to-cinch-1-scart-1];_M-plug__CONSEQUENT__;0;-1>;plug__CONSEQUENT__[dvd-1,dvd-1-scart-1,scart-to-cinch-1,scart-to-cinch-1-scart-1];_M-plug__CONSEQUENT____CONSEQUENT__;0;-1> 0
